FORMAT: 1A
HOST: https://bite.move4mobile.com/

# Bite

Bite is the system used for ordering snacks by Move4Mobile

# Data Structures

## Store (object)

+ id: 1 (number)
+ name: Visboer (string, required)
+ description: Verkoopt vis (string, required)

## StoreDetail (Store)

+ products (array[StoreProduct])
+ base_product_type: 1 (number, required) - Id of default product type

## Product (object)

+ id: 1 (number)
+ name: Kibbeling (string, required)
+ type: 1 (number, required) - Id of Product Type

## StoreProduct (object)

+ Include Product
+ store: 1 (number, required) - Id of store
+ price: 450 (number, required) - Price in cents of product

## Accessory (object)

+ id: 1 (number)
+ store: 1 (number, required) - Id of store
+ product: 1 (number, required) - Id of product
+ price_modification: `-10` (number) - Change of price in cents of product when used as accessory

## Order (object)

+ id: 1 (number)
+ store: 1 (number, required) - Id of store
+ open_date: `2016-07-04T20:00:00+02:00` (string, required) - Date when order opens
+ close_date: `2016-07-04T20:00:00+02:00` (string) - Date when order closes or was closed

## OrderDetail (Order)

+ user_orders (array[UserOrder])

## UserOrderRequest (object)

+ products (array[OrderProduct])

## UserOrder (UserOrderRequest)

+ user: 1 (number, required) - Id of user
+ order: 1 (number, required) - Id of order

## OrderProduct (object)

+ product: 1 (number, required) - Id of product
+ accessory: 1 (number, optional) - Id of aaccessory
+ quantity: 1 (number, optional) - Amount of product

## User (object)

+ id: 1 (number)
+ name: Wilco (string)
+ email: wwolters@move4mobile.com (string)

## UserDetail (User)

+ orders (array[Order])

## ProductType (object)

+ id: 2 (number)
+ name: Snack (string, required)
+ super_type: 1 (number, optional) - Id of super type, or parent folder

## ProductTypeDetail (ProductType)

+ accessories (array[Accessory]) - List of accessories this product type can use.

## Authentication

### Login [POST /oauth/token]

+ Request Username/Password (application/json)

    + Attributes
        + grant_type: password (string, required)
        + username: wilco@move4mobile.com (string, required) - Should be email of user
        + password: abcdef (string, required)

+ Request Refresh Token (application/json)

    + Attributes
        + `grant_type`: `refresh_token` (string, required)
        + refresh_token: 14e0694d-3372-4d34-a0be-4729658cdcd2

+ Response 200 (application/json)

    + Attributes
        + access_token: 734cc2ee-e610-4ffb-9721-8a36b07b4cc3
        + token_type: bearer
        + refresh_token: de3499cd-b431-419c-be27-9508a5bb41ba
        + expires_in: 3599
        + scope: api

### Register [POST /register]

+ Request (application/json)

    + Attributes
        + name: Wilco (string, required) - Displayed name
        + email: wwolters@move4mobile.com (string, required)
        + password: abcdef (string, required)

+ Response 201 (application/json)

    + Attributes (User)

### Change Password [PUT /password]

+ Request (application/json)

    + Attributes
        + password: abc (string, required) - New password

+ Response 200 (application/json)

    + Attributes (User)

## Stores [/stores]

### List All Stores [GET]

+ Response 200 (application/json)

    + Attributes (array[Store])

### Get Details of Store [GET /stores/{id}]

+ Parameters

    + id: 1 (number) - Id of store

+ Response 200 (application/json)

    + Attributes (StoreDetail)

### Create a New Store [POST]

+ Request (application/json)

    + Attributes (StoreDetail)

+ Response 201 (application/json)

    + Attributes (StoreDetail)

## Products [/stores/{store_id}/products]

+ Parameters

    + store_id: 1 (number) - Id of store
    
### List All Products [GET]

+ Response 200 (application/json)

    + Attributes (array[StoreProduct])
    
### Create New Product [POST]

+ Request (application/json)

    + Attributes (StoreProduct)
    
+ Response 201 (application/json)

    + Attributes (StoreProduct)
    
### Change a Product [PUT /stores/{store_id}/products/{product_id}]

+ Parameters

    + store_id: 1 (number) - Id of store
    + product_id: 1 (number) - Id of product

+ Request (application/json)

    + Attributes
        
        + price: 450 (number) - New price in cents of product
    
+ Response 200 (application/json)

    + Attributes (StoreProduct)

## Orders [/orders]

### List All Orders [GET]

+ Response 200 (application/json)

    + Attributes (array[Order])

### Get Details of Order [GET /orders/{id}]

+ Parameters

    + id: 1 (number) - Id of order

+ Response 200 (application/json)

    + Attributes (OrderDetail)

### Create a New Order [POST]

+ Request (application/json)

    + Attributes (Order)

+ Response 201 (application/json)

    + Attributes (OrderDetail)

## User Orders [/orders/{order_id}/user]

+ Parameters

    + order_id: 1 (number, required) - Id of the order

### Get Order for Current User [GET]

+ Response 200 (application/json)

    + Attributes (UserOrder)

### Place Order for Current User [PUT]

+ Request (application/json)

    + Attributes (UserOrderRequest)

+ Response 200 (application/json)

    + Attributes (UserOrder)

### Get Order For Other User [GET /orders/{order_id}/user/{user_id}]

+ Parameters

    + order_id: 1 (number, required) - Id of the order
    + user_id: 1 (number, required) - Id of the user

+ Response 200 (application/json)

    + Attributes (UserOrder)

### Place Order for Other User [PUT /orders/{order_id}/user/{user_id}]

+ Parameters

    + order_id: 1 (number, required) - Id of the order
    + user_id: 1 (number, required) - Id of the user

+ Request (application/json)

    + Attributes (UserOrderRequest)

+ Response 200 (application/json)

    + Attributes (UserOrder)

## Product Types [/product_types]

### List All Product Types [GET]

+ Response 200 (application/json)

    + Attributes (array[ProductType])

### Create a New Product Type [POST]

+ Request (application/json)

    + Attributes (ProductType)

+ Response 201 (application/json)

    + Attributes (ProductTypeDetail)

### Change an Existing Product Type [PUT /product_types/{id}]

+ Parameters

    + id: 1 (number) - Id of product type

+ Request (application/json)

    + Attributes (ProductType)

+ Response 200 (application/json)

    + Attributes (ProductTypeDetail)

## Accessories [/accessories]

### List All Accessories [GET]

+ Response 200 (application/json)

    + Attributes (array[Accessory])

### Create a New Accessory [POST]

+ Request (application/json)

    + Attributes (Accessory)

+ Response 201 (application/json)

    + Attributes (Accessory)

### Change an Existing Accessory [PUT /accessories/{id}]

+ Parameters

    + id: 1 (number) - Id of accessory

+ Request (application/json)

    + Attributes (Accessory)

+ Response 200 (application/json)

    + Attributes (Accessory)